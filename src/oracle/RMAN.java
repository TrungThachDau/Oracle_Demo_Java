/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oracle;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;

import javax.swing.JOptionPane;

/**
 *
 * @author QTrun
 */
public class RMAN extends javax.swing.JFrame {

    /**
     * Creates new form RMAN
     */
    public RMAN() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbbBackupType = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btnLoadDirectory = new javax.swing.JButton();
        btnExecute = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        cbbValue = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNgay = new javax.swing.JTextField();
        txtThang = new javax.swing.JTextField();
        txtNam = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtGio = new javax.swing.JTextField();
        txtPhut = new javax.swing.JTextField();
        txtGiay = new javax.swing.JTextField();
        btnExecuteReStore = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaRestore = new javax.swing.JTextArea();
        btnViewBackupList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Công cụ phục hồi");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Sao lưu"), "Sao lưu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel1.setText("Chọn loại sao lưu");

        cbbBackupType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Backup Database", "Backup Archivelog", "Backup Incremental" }));
        cbbBackupType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbBackupTypeActionPerformed(evt);
            }
        });

        jLabel2.setText("Chọn thư mục");

        btnLoadDirectory.setText("Duyệt");
        btnLoadDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadDirectoryActionPerformed(evt);
            }
        });

        btnExecute.setText("Thực thi");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        jLabel3.setText("jLabel3");

        cbbValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnLoadDirectory)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbbBackupType, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbbValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbbBackupType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadDirectory)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(btnExecute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Khôi phục", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel4.setText("Chọn thời điểm khôi phục");

        jLabel5.setText("dd.mm.yyy");

        jLabel6.setText("HH:mm:ss");

        btnExecuteReStore.setText("Thực thi");
        btnExecuteReStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteReStoreActionPerformed(evt);
            }
        });

        textAreaRestore.setColumns(20);
        textAreaRestore.setRows(5);
        jScrollPane2.setViewportView(textAreaRestore);

        btnViewBackupList.setText("Xem danh sách bản sao lưu");
        btnViewBackupList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBackupListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnExecuteReStore)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtGio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtPhut, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtGiay, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtThang, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNam, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(btnViewBackupList)))
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnViewBackupList))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGiay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExecuteReStore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        // TODO add your handling code here:
       
        String backupType= cbbBackupType.getSelectedItem().toString();
        String directory = jLabel3.getText();
        String dir = directory+"\\backup_%d_%t_%s.bkp";
        String value = cbbValue.getSelectedItem().toString();
            System.out.println("backup database format '"+dir+"';");
            String cmd = "backup database format '"+dir+"';";
            String cmd2 = "backup archivelog all format '"+dir+"';";
            String cmd3 = "BACKUP INCREMENTAL LEVEL "+value+" CUMULATIVE FORMAT '"+dir+"' database;";
        if(backupType.equals("Backup Database")){              
            try {
                 JOptionPane.showMessageDialog(null, "Đang sao lưu dữ liệu, vui lòng chờ...");
                ProcessBuilder builder = new ProcessBuilder("cmd.exe", "/c", "rman target /" );
                builder.redirectErrorStream(true);
                Process p = builder.start();
                InputStream is = p.getInputStream();
                
                OutputStream os = p.getOutputStream();
                os.write(cmd.getBytes());
                os.flush();
                os.close();
    
                BufferedReader reader = new BufferedReader(new InputStreamReader(is));
                String line = null;
                while ((line = reader.readLine()) != null) {
                    outputTextArea.append(line + "\n");
                    System.out.println(line);                    
                }
                
                int exitStatus = p.waitFor();
    
                if (exitStatus == 0) {
                    JOptionPane.showMessageDialog(null, "Sao lưu thành công");
                } else {
                    JOptionPane.showMessageDialog(null, "Sao lưu thất bại");
                }
            } catch (Exception e) {
                // TODO: handle exception
            }
        }
        else if(backupType.equals("Backup Archivelog")){
            try {
                 JOptionPane.showMessageDialog(null, "Đang sao lưu dữ liệu, vui lòng chờ...");
                ProcessBuilder builder = new ProcessBuilder("cmd.exe", "/c", "rman target /" );
                builder.redirectErrorStream(true);
                Process p = builder.start();
                InputStream is = p.getInputStream();
                
                OutputStream os = p.getOutputStream();
                os.write(cmd2.getBytes());
                os.flush();
                os.close();
    
                BufferedReader reader = new BufferedReader(new InputStreamReader(is));
                String line = null;
                while ((line = reader.readLine()) != null) {
                    outputTextArea.append(line + "\n");
                    System.out.println(line);                    
                }
                
                int exitStatus = p.waitFor();
    
                if (exitStatus == 0) {
                    JOptionPane.showMessageDialog(null, "Sao lưu thành công");
                } else {
                    JOptionPane.showMessageDialog(null, "Sao lưu thất bại");
                }
            } catch (Exception e) {
            }
        }
        else if (backupType.equals("Backup Incremental")){
            try {
                 JOptionPane.showMessageDialog(null, "Đang sao lưu dữ liệu, vui lòng chờ...");
                ProcessBuilder builder = new ProcessBuilder("cmd.exe", "/c", "rman target /" );
                builder.redirectErrorStream(true);
                Process p = builder.start();
                InputStream is = p.getInputStream();
                
                OutputStream os = p.getOutputStream();
                os.write(cmd3.getBytes());
                os.flush();
                os.close();
    
                BufferedReader reader = new BufferedReader(new InputStreamReader(is));
                String line = null;
                while ((line = reader.readLine()) != null) {
                    outputTextArea.append(line + "\n");
                    System.out.println(line);                    
                }
                
                int exitStatus = p.waitFor();
    
                if (exitStatus == 0) {
                    JOptionPane.showMessageDialog(null, "Sao lưu thành công");
                } else {
                    JOptionPane.showMessageDialog(null, "Sao lưu thất bại");
                }
            } catch (Exception e) {
            }
        }
        
        
        

    }//GEN-LAST:event_btnExecuteActionPerformed

    private void btnLoadDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadDirectoryActionPerformed
        // TODO add your handling code here:
        
        jFileChooser1.setDialogTitle("Chọn thư mục để lưu");
        jFileChooser1.setFileSelectionMode(jFileChooser1.DIRECTORIES_ONLY);
        int result = jFileChooser1.showOpenDialog(this);
        if (result == jFileChooser1.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            jLabel3.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_btnLoadDirectoryActionPerformed

    private void btnExecuteReStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteReStoreActionPerformed
        // TODO add your handling code here:
        String ngay = txtNgay.getText().trim();
        String thang = txtThang.getText().trim();
        String nam = txtNam.getText().trim();
        String gio = txtGio.getText().trim();
        String phut = txtPhut.getText().trim();
        String giay = txtGiay.getText().trim();
        String fulltime = ngay+"-"+thang+"-"+nam+" "+gio+":"+phut+":"+giay;
        textAreaRestore.append(fulltime);
        String cmd = "RUN {\n" +
                    "  SET UNTIL TIME \"to_date('"+fulltime+"', 'DD-MM-YYYY HH24:MI:SS')\";\n" +
                    "  ALLOCATE CHANNEL ch1 TYPE DISK;\n" +
                    "  RESTORE DATABASE;\n" +
                    "  RECOVER DATABASE;\n" +
                    "}";
        try {
            
            ProcessBuilder builder = new ProcessBuilder("cmd.exe", "/c", "rman target /" );
            builder.redirectErrorStream(true);
            Process p = builder.start();
            InputStream is = p.getInputStream();

            OutputStream os = p.getOutputStream();
            os.write(cmd.getBytes());
            os.flush();
            os.close();

            BufferedReader reader = new BufferedReader(new InputStreamReader(is));
            String line = null;
            while ((line = reader.readLine()) != null) {
                textAreaRestore.append(line + "\n");
                System.out.println(line);                    
            }

            int exitStatus = p.waitFor();

            if (exitStatus == 0) {
                JOptionPane.showMessageDialog(null, "Khôi phục thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Khôi phục thất bại");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnExecuteReStoreActionPerformed

    private void btnViewBackupListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBackupListActionPerformed
        // TODO add your handling code here:
        new ViewBackupListRMAN().setVisible(true);
    }//GEN-LAST:event_btnViewBackupListActionPerformed

    private void cbbBackupTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbBackupTypeActionPerformed
        // TODO add your handling code here:
        
        
            
        
        
    }//GEN-LAST:event_cbbBackupTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RMAN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RMAN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RMAN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RMAN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RMAN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnExecute;
    private javax.swing.JButton btnExecuteReStore;
    private javax.swing.JButton btnLoadDirectory;
    private javax.swing.JButton btnViewBackupList;
    private javax.swing.JComboBox<String> cbbBackupType;
    private javax.swing.JComboBox<String> cbbValue;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JTextArea textAreaRestore;
    private javax.swing.JTextField txtGiay;
    private javax.swing.JTextField txtGio;
    private javax.swing.JTextField txtNam;
    private javax.swing.JTextField txtNgay;
    private javax.swing.JTextField txtPhut;
    private javax.swing.JTextField txtThang;
    // End of variables declaration//GEN-END:variables
}
