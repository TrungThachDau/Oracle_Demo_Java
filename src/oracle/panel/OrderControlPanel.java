/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package oracle.panel;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import oracle.OracleConnection;
import oracle.model.BanDB;
import oracle.model.BanModel;
import oracle.model.CTDonHangDB;
import oracle.model.CTDonHangModel;
import oracle.model.DB;
import oracle.model.DonHangDB;
import oracle.model.DonHangModel;
import oracle.model.NhanVienDB;
import oracle.model.SanPhamDB;
import oracle.model.SanPhamModel;


/**
 *
 * @author trilo
 */
public class OrderControlPanel extends javax.swing.JPanel {
    ArrayList<DonHangModel> dsDonHangs;
    OracleConnection orclConn;
    DonHangDB donHangDB;
    BanDB banDB;
    CTDonHangDB cTDonHangDB;
    SanPhamDB sanPhamDB;
    ArrayList<CTDonHangModel> cTDonHangModels;
    public OrderControlPanel() {
        initComponents();
        init();
    }
    private void init(){
        orclConn = new OracleConnection();
        dsDonHangs = new ArrayList<>();
        cTDonHangModels = new ArrayList<>();
        donHangDB = new DonHangDB(orclConn);
        banDB = new BanDB(orclConn);
        cTDonHangDB = new CTDonHangDB(orclConn);
        sanPhamDB = new SanPhamDB(orclConn);
        
        btn_cap_nhat_dh.setEnabled(false);
        btn_xoa_dh.setEnabled(false);
        btn_cap_nhat_sp.setEnabled(false);
        btn_xoa_sp.setEnabled(false);
                
        table_ct_don_hang.setEnabled(true);
        ((SpinnerNumberModel) txt_ct_don_hang_sl_sp.getModel()).setMinimum(1);
        loadListOrder();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_don_hang = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_don_hang = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txt_ma_dh = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_ma_ban = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_ten_nv = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cb_trang_thai_don = new javax.swing.JComboBox<>();
        btn_cap_nhat_dh = new javax.swing.JButton();
        btn_xoa_dh = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txt_tong_tien_dh = new javax.swing.JLabel();
        panel_ct_don_hang = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_ct_don_hang = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txt_ct_don_hang_sl_sp = new javax.swing.JSpinner();
        btn_cap_nhat_sp = new javax.swing.JButton();
        btn_xoa_sp = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_ct_dh_ten_sp = new javax.swing.JLabel();

        table_don_hang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã ĐH", "Bàn", "Tổng Tiền", "Nhân Viên", "Trạng Thái", "TG Đặt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_don_hang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_don_hangMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table_don_hang);

        jLabel4.setText("Mã ĐH:");

        txt_ma_dh.setText("01");

        jLabel5.setText("Bàn:");

        txt_ma_ban.setText("01");

        jLabel7.setText("Nhân Viên:");

        txt_ten_nv.setText("Nguyễn Tri Long");

        jLabel9.setText("Trạng Thái:");

        cb_trang_thai_don.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa Thanh Toán", "Đã Thanh Toán" }));

        btn_cap_nhat_dh.setText("Cập nhật đơn");
        btn_cap_nhat_dh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cap_nhat_dhActionPerformed(evt);
            }
        });

        btn_xoa_dh.setText("Xóa đơn");
        btn_xoa_dh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoa_dhActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("TỔNG TIỀN");

        txt_tong_tien_dh.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        txt_tong_tien_dh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout panel_don_hangLayout = new javax.swing.GroupLayout(panel_don_hang);
        panel_don_hang.setLayout(panel_don_hangLayout);
        panel_don_hangLayout.setHorizontalGroup(
            panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_don_hangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_don_hangLayout.createSequentialGroup()
                            .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_ma_dh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_ma_ban, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(98, 98, 98)
                            .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel7))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cb_trang_thai_don, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_ten_nv, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_tong_tien_dh, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_don_hangLayout.createSequentialGroup()
                            .addComponent(btn_cap_nhat_dh, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btn_xoa_dh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panel_don_hangLayout.setVerticalGroup(
            panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_don_hangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_don_hangLayout.createSequentialGroup()
                        .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_ma_dh)
                            .addComponent(jLabel7)
                            .addComponent(txt_ten_nv))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_ma_ban)
                            .addComponent(jLabel9)
                            .addComponent(cb_trang_thai_don, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_don_hangLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_tong_tien_dh, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_xoa_dh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cap_nhat_dh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txt_tong_tien_dh.getAccessibleContext().setAccessibleName("");

        table_ct_don_hang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên SP", "Số Lượng", "Thành Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_ct_don_hang.getTableHeader().setReorderingAllowed(false);
        table_ct_don_hang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_ct_don_hangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_ct_don_hang);

        jLabel1.setText("Số lượng:");

        btn_cap_nhat_sp.setText("Cập nhật sản phẩm");
        btn_cap_nhat_sp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cap_nhat_spActionPerformed(evt);
            }
        });

        btn_xoa_sp.setText("Xóa sản phẩm");
        btn_xoa_sp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoa_spActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên sản phẩm:");

        javax.swing.GroupLayout panel_ct_don_hangLayout = new javax.swing.GroupLayout(panel_ct_don_hang);
        panel_ct_don_hang.setLayout(panel_ct_don_hangLayout);
        panel_ct_don_hangLayout.setHorizontalGroup(
            panel_ct_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_ct_don_hangLayout.createSequentialGroup()
                .addGroup(panel_ct_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_ct_don_hangLayout.createSequentialGroup()
                        .addGroup(panel_ct_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_ct_don_hangLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btn_cap_nhat_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_xoa_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_ct_don_hangLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panel_ct_don_hangLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(panel_ct_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_ct_don_hangLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txt_ct_dh_ten_sp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_ct_don_hangLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(txt_ct_don_hang_sl_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        panel_ct_don_hangLayout.setVerticalGroup(
            panel_ct_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_ct_don_hangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(20, 20, 20)
                .addGroup(panel_ct_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txt_ct_dh_ten_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_ct_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txt_ct_don_hang_sl_sp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_ct_don_hangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cap_nhat_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_xoa_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_don_hang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_ct_don_hang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_don_hang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_ct_don_hang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void table_don_hangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_don_hangMouseClicked
        // TODO add your handling code here:

        // GAn thong tin
        String maDH = table_don_hang.getValueAt(table_don_hang.getSelectedRow(), 0).toString().trim();
        String maBan =  table_don_hang.getValueAt(table_don_hang.getSelectedRow(), 1).toString();
        Float tongTien = Float.parseFloat(table_don_hang.getValueAt(table_don_hang.getSelectedRow(), 2).toString()) ;
        String tenNhanVien = (String) table_don_hang.getValueAt(table_don_hang.getSelectedRow(), 3);
        String trangThai = table_don_hang.getValueAt(table_don_hang.getSelectedRow(), 4).toString();

        txt_ma_dh.setText(maDH);
        txt_ma_ban.setText(maBan);
        txt_ten_nv.setText(tenNhanVien);
        txt_tong_tien_dh.setText(tongTien.toString());
        cb_trang_thai_don.getModel().setSelectedItem(trangThai);
        // Kiem tra trang thai don
        if (trangThai.equalsIgnoreCase("Đã Thanh Toán")) {
            table_ct_don_hang.setEnabled(false);
            btn_cap_nhat_dh.setEnabled(false);
            btn_xoa_dh.setEnabled(false);
        }
        else{
            // Chua thanh toan
            table_ct_don_hang.setEnabled(true);
            btn_cap_nhat_dh.setEnabled(true); 
            btn_xoa_dh.setEnabled(true);
        }
        
        // Load du lieu chi tiet don hang
        loadCTDonHang(Integer.parseInt(maDH));
    }//GEN-LAST:event_table_don_hangMouseClicked

    private void btn_cap_nhat_dhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cap_nhat_dhActionPerformed
        // TODO add your handling code here:
        if (table_don_hang.getSelectedRow() == -1) {
            return;
        }
        //        Lay don hang dang duoc chon
        int maDH = Integer.parseInt(table_don_hang.getValueAt(table_don_hang.getSelectedRow(), 0).toString());
        DonHangModel donHangModel = null;
        for (DonHangModel dsDonHang : dsDonHangs) {
            if(dsDonHang.getMaDH() == maDH) {
                donHangModel = dsDonHang;
                break;
            }
        }
        if(donHangModel != null && DB.confirmAction("Bạn muốn cập nhật đơn hàng ?")){
            //            Lay trang thai tu combobox
            if (cb_trang_thai_don.getModel().getSelectedItem().toString().equalsIgnoreCase("Đã thanh toán")) {
                donHangModel.setTrangThaiDH(1);
            }
            else{
                donHangModel.setTrangThaiDH(0);
            }

            //            Luu thay doi xuong db
            boolean result = donHangDB.updateDonHang(donHangModel);
            
            if (result) {
                // cap nhat trang thai ban
                BanModel banModel = banDB.getBan(donHangModel.getMaBan());
                if (banModel != null) {
                    
                    // neu trang thai don => da thanh toan => trang thai ban => trong
                    if (donHangModel.getTrangThaiDH() == 1) {
                        banModel.setTrangThaiBan(0);
                        banModel.setSoLuongKhach(0);
                    }
                    else{
                        banModel.setTrangThaiBan(1);
                    }
                    
                    banDB.updateBan(banModel);
                    JOptionPane.showMessageDialog(null, "Cập nhật đơn hàng thành công");
                    loadListOrder();
                }
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Cập nhật đơn hàng thất bại");
            }

        }

    }//GEN-LAST:event_btn_cap_nhat_dhActionPerformed

    private void btn_xoa_dhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoa_dhActionPerformed
        // TODO add your handling code here:
        
        //        Lay ma don hang dang duoc chon
        int maDH = Integer.parseInt(table_don_hang.getValueAt(table_don_hang.getSelectedRow(), 0).toString().trim());
        if (confirmAction("Bạn muốn xóa đơn hàng này ?")) {
            // Xoa chi tiet don hang
            ArrayList<CTDonHangModel> cTDonHangs = cTDonHangDB.getCTDonHangFromDonHangs(maDH);
            SanPhamModel sanPham = new SanPhamModel();
            for (CTDonHangModel cTDonHang : cTDonHangs) {
                cTDonHangDB.deleteCTDonHang(cTDonHang.getMaCTDH());
                // Them lai slton cho san pham
                sanPham = sanPhamDB.getSanPham(cTDonHang.getMaSP());
                sanPham.setSoLuongTon(sanPham.getSoLuongTon() + cTDonHang.getSoLuong());
                sanPhamDB.updateSanPham(sanPham);
            }
//            Xoa don hang
            DonHangModel donHang = donHangDB.getDonHang(maDH);
            boolean result = donHangDB.deleteDonHang(maDH);
            
            
            
            if (result){
                //                Cap nhat trang thai ban
                BanModel bm = banDB.getBan(donHang.getMaBan());
                bm.setTrangThaiBan(0);
                bm.setSoLuongKhach(0);
                banDB.updateBan(bm);
                // load lai ctdh
                loadCTDonHang(0);
                JOptionPane.showMessageDialog(null, "Xóa đơn hàng thành công");
            }

            loadListOrder();
        }
    }//GEN-LAST:event_btn_xoa_dhActionPerformed

    private void btn_cap_nhat_spActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cap_nhat_spActionPerformed
        // TODO add your handling code here:
        if (table_ct_don_hang.getSelectedRow() != -1) {
            //        Lay id sp duoc chon
            int maCTDH = Integer.parseInt(table_ct_don_hang.getValueAt(table_ct_don_hang.getSelectedRow(), 0).toString().trim());
            // tim sp trong gio hang
            //        Lay id don hang duoc chon

            CTDonHangModel cTDonHang = cTDonHangDB.getCTDHInArray(maCTDH, cTDonHangModels);
            SanPhamModel sanPham = sanPhamDB.getSanPham(cTDonHang.getMaSP());
            int oldSoLuong = cTDonHang.getSoLuong();
            int newSoLuong = Integer.parseInt(txt_ct_don_hang_sl_sp.getValue().toString());

            if (cTDonHang != null && DB.confirmAction("Bạn muốn cập nhật sản phẩm: " + sanPham.getTenSP() + " ?")) {
                
                // kiem tra so luong ton sp con du khong
                if ((newSoLuong - oldSoLuong) > sanPham.getSoLuongTon()) {
                    JOptionPane.showMessageDialog(null, "Vượt quá số lượng sản phẩm còn lại !");
                    return;
                }
                
                // cap nhat so luong san pham trong don hang
                cTDonHang.setSoLuong(newSoLuong);
                // luu xuong db
                boolean result = cTDonHangDB.updateCTDonHang(cTDonHang);
                
                // cap nhat lai so luong ton sp
                int newSLTon = sanPham.getSoLuongTon() - (newSoLuong - oldSoLuong);
                sanPham.setSoLuongTon(newSLTon);
                sanPhamDB.updateSanPham(sanPham);

                // CAp nhat lai tong tien don hang
                DonHangModel currentDonHang = donHangDB.getDonHang(cTDonHang.getMaDH());

                float totalChange = currentDonHang.getTongGiaTriDH() + ((newSoLuong - oldSoLuong) * sanPham.getGiaSP());
                currentDonHang.setTongGiaTriDH(totalChange);
                result = donHangDB.updateDonHang(currentDonHang);


                if (result) {
                    JOptionPane.showMessageDialog(null, "Cập nhật sản phẩm thành công !");
                }
                // load lai ctdh
                loadCTDonHang(maCTDH);
                loadListOrder();
                txt_tong_tien_dh.setText("");
                txt_ct_dh_ten_sp.setText("");
                txt_ct_don_hang_sl_sp.setValue(1);
            }
            else{
                JOptionPane.showMessageDialog(null, "Không tìm thấy sản phẩm trong giỏ hàng !");
            }

        }
        
//        Tim don hang
        
    }//GEN-LAST:event_btn_cap_nhat_spActionPerformed

    private void btn_xoa_spActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoa_spActionPerformed
        // TODO add your handling code here:
        if (table_ct_don_hang.getSelectedRow() != -1) {
            int maCTDH = Integer.parseInt(table_ct_don_hang.getValueAt(table_ct_don_hang.getSelectedRow(), 0).toString().trim());
            CTDonHangModel cTDonHang = cTDonHangDB.getCTDonHangs(maCTDH);
            // Lay ctdonhang
            if (DB.confirmAction("Bạn muốn xóa sản phẩm này ?")) {
                // xoa ctdh
                boolean result = cTDonHangDB.deleteCTDonHang(maCTDH);
                
                // cap nhat lai so luong ton sp
                SanPhamModel sanPham = sanPhamDB.getSanPham(cTDonHang.getMaSP());
                int newSLTon = sanPham.getSoLuongTon() + cTDonHang.getSoLuong();
                sanPham.setSoLuongTon(newSLTon);
                sanPhamDB.updateSanPham(sanPham);
                
                
                // Kiem tra don hang con san pham khong
                ArrayList<CTDonHangModel> dsCTDH = cTDonHangDB.getCTDonHangFromDonHangs(cTDonHang.getMaDH());
                if (dsCTDH.size() == 0) {
                    // khong con san pham
                    // xoa don hang
                    DonHangModel donHang = donHangDB.getDonHang(cTDonHang.getMaDH());
                    donHangDB.deleteDonHang(donHang.getMaDH());
                    //                Cap nhat trang thai ban
                    BanModel bm = banDB.getBan(donHang.getMaBan());
                    bm.setTrangThaiBan(0);
                    bm.setSoLuongKhach(0);
                    banDB.updateBan(bm);
                }
                else{
                    // cap nhat tong gia don hang
                    // CAp nhat lai tong tien don hang
                    DonHangModel currentDonHang = donHangDB.getDonHang(cTDonHang.getMaDH());
                    float totalChange = currentDonHang.getTongGiaTriDH() - (cTDonHang.getSoLuong() * sanPham.getGiaSP());
                    currentDonHang.setTongGiaTriDH(totalChange);
                    result = donHangDB.updateDonHang(currentDonHang);
                }
                
                

                if (result) {
                    JOptionPane.showMessageDialog(null, "Xóa thành công");
                    // load lai dsdonhang
                    txt_tong_tien_dh.setText("");
                    txt_ct_dh_ten_sp.setText("");
                    txt_ct_don_hang_sl_sp.setValue(1);
                    loadCTDonHang(maCTDH);
                    loadListOrder();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Xóa thất bại");
                }
            }  
        }
        
    }//GEN-LAST:event_btn_xoa_spActionPerformed

    private void table_ct_don_hangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_ct_don_hangMouseClicked
        // TODO add your handling code here:
        btn_xoa_sp.setEnabled(true);
        btn_cap_nhat_sp.setEnabled(true);
//        Gan value cho text
        if (table_ct_don_hang.isEnabled()) {
            String tenSP = table_ct_don_hang.getValueAt(table_ct_don_hang.getSelectedRow(), 1).toString().trim();
            int soLuong = Integer.parseInt(table_ct_don_hang.getValueAt(table_ct_don_hang.getSelectedRow(), 2).toString().trim());

            txt_ct_dh_ten_sp.setText(tenSP);
            txt_ct_don_hang_sl_sp.setValue(soLuong);
        }
        
        
        
        
    }//GEN-LAST:event_table_ct_don_hangMouseClicked
    
    private void loadListOrder(){
        
        dsDonHangs = donHangDB.loadDSDonHangs();
        DefaultTableModel tblModel = (DefaultTableModel)table_don_hang.getModel();
        tblModel.setRowCount(0);
        NhanVienDB nhanVienDB = new NhanVienDB(orclConn);
//       Tao dt productlayout
        for (DonHangModel donHangModel : dsDonHangs) {
            String trangThai = "Chưa thanh toán";
            if(donHangModel.getTrangThaiDH() == 1){ // da thanh toan
                trangThai = "Đã thanh toán";
            }
            
            String tenNhanVien = nhanVienDB.getNhanVien(donHangModel.getMaNhanVien()).getTenNV();
            
            Object tbData[] = {
                donHangModel.getMaDH(),
                donHangModel.getMaBan(),
                donHangModel.getTongGiaTriDH(),
                tenNhanVien,
                trangThai,
                donHangModel.getThoiGianDatHang(),
            };
            tblModel.addRow(tbData);  
        }
        
        
        table_don_hang.setModel(tblModel);
        
        
//        set hien thi hinh anh cho cot 0
//        set width choc ac cot
        table_don_hang.setRowHeight(30);
        table_don_hang.getColumnModel().getColumn(0).setPreferredWidth(10);
        table_don_hang.getColumnModel().getColumn(1).setPreferredWidth(5);
        table_don_hang.getColumnModel().getColumn(2).setPreferredWidth(50);
        table_don_hang.getColumnModel().getColumn(3).setPreferredWidth(200);
        table_don_hang.getColumnModel().getColumn(4).setPreferredWidth(50);
        table_don_hang.getColumnModel().getColumn(5).setPreferredWidth(50);
        table_don_hang.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        table_don_hang.updateUI();
    }
    
    private void loadCTDonHang(int maDH){
        SanPhamDB sanPhamDB = new SanPhamDB(orclConn);
        cTDonHangModels = cTDonHangDB.getCTDonHangFromDonHangs(maDH);
        DefaultTableModel tblModel = (DefaultTableModel)table_ct_don_hang.getModel();
        tblModel.setRowCount(0);
//       Tao dt productlayout

        for (CTDonHangModel cTDonHang : cTDonHangModels) {
            SanPhamModel sanPhamModel =  sanPhamDB.getSanPham(cTDonHang.getMaSP());
            Object tbData[] = {
                cTDonHang.getMaCTDH(),
                sanPhamModel.getTenSP(),
                cTDonHang.getSoLuong(),
                (cTDonHang.getSoLuong() * sanPhamModel.getGiaSP())
            };
            tblModel.addRow(tbData);  
        }
        
        
        table_ct_don_hang.setModel(tblModel);
        
        
//        set hien thi hinh anh cho cot 0
//        set width choc ac cot
        table_ct_don_hang.setRowHeight(30);
        table_ct_don_hang.getColumnModel().getColumn(0).setPreferredWidth(10);
        table_ct_don_hang.getColumnModel().getColumn(1).setPreferredWidth(5);
        table_ct_don_hang.getColumnModel().getColumn(2).setPreferredWidth(50);
        
        table_ct_don_hang.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        table_ct_don_hang.updateUI();
        
    }
    
    private boolean confirmAction(String message){
        int choice = JOptionPane.showConfirmDialog(null, message, "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            return true;
        } else {
            return false;
        }
    }
    
    private DonHangModel getDonHangInDSDH(int maDH, ArrayList<DonHangModel> arrayList){
        for (DonHangModel donHangModel : arrayList) {
            if (maDH == donHangModel.getMaDH()) {
                return donHangModel;
            }
            
        }
        return null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cap_nhat_dh;
    private javax.swing.JButton btn_cap_nhat_sp;
    private javax.swing.JButton btn_xoa_dh;
    private javax.swing.JButton btn_xoa_sp;
    private javax.swing.JComboBox<String> cb_trang_thai_don;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panel_ct_don_hang;
    private javax.swing.JPanel panel_don_hang;
    private javax.swing.JTable table_ct_don_hang;
    private javax.swing.JTable table_don_hang;
    private javax.swing.JLabel txt_ct_dh_ten_sp;
    private javax.swing.JSpinner txt_ct_don_hang_sl_sp;
    private javax.swing.JLabel txt_ma_ban;
    private javax.swing.JLabel txt_ma_dh;
    private javax.swing.JLabel txt_ten_nv;
    private javax.swing.JLabel txt_tong_tien_dh;
    // End of variables declaration//GEN-END:variables
}
