/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oracle.form;

import java.awt.Component;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import oracle.OracleConnection;
import oracle.model.BanDB;
import oracle.model.BanModel;
import oracle.model.CTDonHangDB;
import oracle.model.CTDonHangModel;
import oracle.model.DB;
import oracle.model.DonHangDB;
import oracle.model.DonHangModel;
import oracle.model.GioHangModel;
import oracle.model.SanPhamDB;
import oracle.model.SanPhamModel;

/**
 *
 * @author trilo
 */
public class CreateOrderForm extends javax.swing.JFrame {

    ArrayList<SanPhamModel> productModels;
    ArrayList<GioHangModel> cartModels;
    OracleConnection connDB;
    SanPhamDB sanPhamDB;
    public CreateOrderForm() {
        initComponents();
        init();
    }
    
    private void init() {
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        connDB = new OracleConnection();
        productModels = new ArrayList<>();
        cartModels = new ArrayList<>();
        txt_quantity_order_product.setValue(1);
        ((SpinnerNumberModel) txt_gh_sl_sp.getModel()).setMinimum(1);
        sanPhamDB = new SanPhamDB(connDB);
        
        btn_add_donhang.setEnabled(false);
        btn_gh_capnhat_sp.setEnabled(false);
        btn_gh_xoa_sp.setEnabled(false);
        btn_add_to_cart.setEnabled(false);
        
        txt_so_khach.setText("1");
        btn_add_donhang.setEnabled(false);
        ((SpinnerNumberModel) txt_quantity_order_product.getModel()).setMinimum(1);
        loadListProducts();
        loadCBBan();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        layout_product = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_product = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txt_product_name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_quantity_order_product = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        txt_total = new javax.swing.JLabel();
        btn_add_to_cart = new javax.swing.JButton();
        btn_add_donhang = new javax.swing.JButton();
        cb_ban = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_so_khach = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_gio_hang = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txt_gh_ten_sp = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_gh_sl_sp = new javax.swing.JSpinner();
        btn_gh_capnhat_sp = new javax.swing.JButton();
        btn_gh_xoa_sp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tạo đơn hàng");

        layout_product.setMaximumSize(new java.awt.Dimension(728, 526));
        layout_product.setRequestFocusEnabled(false);

        table_product.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "ID", "Tên Sản Phẩm", "Giá", "Tồn Kho"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                table_productMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                table_productMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(table_product);

        jLabel1.setText("Tên sản phẩm:");

        jLabel2.setText("Số lượng:");

        txt_quantity_order_product.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txt_quantity_order_productInputMethodTextChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Tổng tiền");

        txt_total.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txt_total.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_total.setText("0");

        btn_add_to_cart.setText("Thêm vào giỏ");
        btn_add_to_cart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_to_cartActionPerformed(evt);
            }
        });

        btn_add_donhang.setText("Tạo đơn");
        btn_add_donhang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_donhangActionPerformed(evt);
            }
        });

        jLabel4.setText("Bàn:");

        jLabel5.setText("Số Khách:");

        table_gio_hang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên SP", "Số Lượng", "Thành Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_gio_hang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_gio_hangMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table_gio_hang);

        jLabel6.setText("Tên sản phẩm:");

        jLabel7.setText("Số lượng:");

        txt_gh_sl_sp.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txt_gh_sl_spInputMethodTextChanged(evt);
            }
        });

        btn_gh_capnhat_sp.setText("Cập nhật sản phẩm");
        btn_gh_capnhat_sp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gh_capnhat_spActionPerformed(evt);
            }
        });

        btn_gh_xoa_sp.setText("Xóa sản phẩm");
        btn_gh_xoa_sp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gh_xoa_spActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout_productLayout = new javax.swing.GroupLayout(layout_product);
        layout_product.setLayout(layout_productLayout);
        layout_productLayout.setHorizontalGroup(
            layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout_productLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout_productLayout.createSequentialGroup()
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_quantity_order_product, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_product_name, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_so_khach)
                            .addComponent(cb_ban, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(layout_productLayout.createSequentialGroup()
                        .addComponent(btn_add_to_cart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_add_donhang, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout_productLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout_productLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout_productLayout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_gh_sl_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout_productLayout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_gh_ten_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout_productLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btn_gh_capnhat_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_gh_xoa_sp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout_productLayout.setVerticalGroup(
            layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout_productLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout_productLayout.createSequentialGroup()
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(txt_product_name, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_quantity_order_product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout_productLayout.createSequentialGroup()
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cb_ban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_so_khach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout_productLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout_productLayout.createSequentialGroup()
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_gh_ten_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_gh_sl_sp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addGroup(layout_productLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_add_to_cart, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(btn_add_donhang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_gh_capnhat_sp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_gh_xoa_sp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(layout_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(layout_product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void loadCBBan(){
        BanDB banDB = new BanDB(connDB);
        ArrayList<BanModel> dsBans = banDB.loadDSBans();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
//        Lay danh sach ban trong
        for (BanModel ban : dsBans) {
            if(ban.getTrangThaiBan() == 0){ // khong co ng ngoi
               model.addElement(String.valueOf(ban.getMaBan()));
            } 
        }

        cb_ban.setModel(model);
    }
    
    
    private void updateTotalBill(ArrayList<GioHangModel> cartModels){
        float total = 0;
        for (GioHangModel cartModel : cartModels) {
            total += cartModel.getSoLuong()* cartModel.getProductModel().getGiaSP();
        }
        txt_total.setText(formatNumber(total) + " đ");
    }
    
    private String formatNumber(Object number){
        return new DecimalFormat("#,###").format(number);
    }
    
    private void loadListProducts(){
        // TODO add your handling code here:  
        productModels = sanPhamDB.loadDSSanPhams();
//       Tao dt productlayout
        for (SanPhamModel productModel : productModels) {
            Object tbData[] = {
                "",
                productModel.getMaSP(),
                productModel.getTenSP(), 
                productModel.getGiaSP(),
                productModel.getSoLuongTon()
            };
            DefaultTableModel tblModel = (DefaultTableModel)table_product.getModel();

            tblModel.addRow(tbData);  
        }
        table_product.setRowHeight(50);
//        set hien thi hinh anh cho cot 0
        table_product.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());
//        set width choc ac cot
        table_product.getColumnModel().getColumn(0).setMinWidth(100);
        table_product.getColumnModel().getColumn(0).setMaxWidth(100);
        table_product.getColumnModel().getColumn(1).setPreferredWidth(5);
        table_product.getColumnModel().getColumn(2).setPreferredWidth(250);
        table_product.getColumnModel().getColumn(3).setPreferredWidth(30);
        table_product.getColumnModel().getColumn(4).setPreferredWidth(10);
        table_product.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        table_product.updateUI();
    }
    
    private void loadGioHang(){
        
        DefaultTableModel tblModel = (DefaultTableModel)table_gio_hang.getModel();
        tblModel.setRowCount(0);
//       Tao dt productlayout

        for (GioHangModel giohang : cartModels) {
            Object tbData[] = {
                giohang.getProductModel().getMaSP(),
                giohang.getProductModel().getTenSP(),
                giohang.getSoLuong(),
                giohang.getSoLuong() * giohang.getProductModel().getGiaSP()
            };
            tblModel.addRow(tbData);  
        }
        table_gio_hang.setModel(tblModel);
//        set hien thi hinh anh cho cot 0
//        set width choc ac cot
        table_gio_hang.setRowHeight(30);
        table_gio_hang.getColumnModel().getColumn(0).setPreferredWidth(10);
        table_gio_hang.getColumnModel().getColumn(1).setPreferredWidth(100);
        table_gio_hang.getColumnModel().getColumn(2).setPreferredWidth(10);
        table_gio_hang.getColumnModel().getColumn(3).setPreferredWidth(50);
        table_gio_hang.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        table_gio_hang.updateUI();
        
    }
    
    class ImageRenderer extends JLabel implements TableCellRenderer {
        public ImageRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (value instanceof ImageIcon) {
                // Nếu giá trị là ImageIcon, thiết lập nó làm biểu tượng cho nhãn
                setIcon((ImageIcon) value);
            } else {
                // Nếu không phải, thiết lập văn bản cho nhãn
                setText((value == null) ? "" : value.toString());
            }
            return this;
        }
    }
    
    private void table_productMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_productMousePressed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_table_productMousePressed

    private void btn_add_to_cartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_to_cartActionPerformed
        // TODO add your handling code here:
        if (table_product.getSelectedRow() != -1 ) {
                btn_add_donhang.setEnabled(true);
                // Lay san pham duoc chon
             if (table_product.getSelectedRow() == -1) {
                 JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm !");
                     return;
             }

             btn_add_donhang.setEnabled(true);

             int id_selected = (int) table_product.getValueAt(table_product.getSelectedRow(), 1);
             SanPhamModel productModel = new SanPhamModel();
             for (SanPhamModel item : productModels) {
                 if (item.getMaSP() == id_selected) {
                     productModel = item;
                     break;
                 }
             }
             // kiem tra sp duoc chon da co trong gio hang chua
             boolean flag = false;
             for (int i = 0; i < cartModels.size(); i++) {
                 GioHangModel cartModel = cartModels.get(i);
                 if (cartModel.getProductModel().getMaSP() == productModel.getMaSP()) {
                     int newQuan = cartModel.getSoLuong()+ (int) txt_quantity_order_product.getValue();
                     cartModels.get(i).setSoLuong(newQuan);
                     flag = true;
                     break;
                 }
             }

             if (!flag) {
                 // chua co trong gio hang => them moi
                 cartModels.add(new GioHangModel(productModel, (int) txt_quantity_order_product.getValue()));
             }

             // Cap nhat len listview cart
             loadGioHang();
             updateTotalBill(cartModels);
             txt_quantity_order_product.setValue(1); 
        }
        
        
    }//GEN-LAST:event_btn_add_to_cartActionPerformed

    private void btn_add_donhangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_donhangActionPerformed
        try {
            // TODO add your handling code here:
//            Kiem tra du lieu nhap
            int soKhach = 1;
            try {
                 soKhach = Integer.parseInt(txt_so_khach.getText());
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập số khách đúng định dạng !");
                return;
            }
            
            if (soKhach <= 0) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập số khách lớn hơn 0 !");
                return;
            }
            
            if (cartModels.size() <= 0) {
                JOptionPane.showMessageDialog(null, "Vui lòng thêm sản phẩm vào giỏ hàng !");
                return;
            }
            
            if (DB.confirmAction("Bạn muốn tạo đơn hàng ?")) {
                // Tao don hang
                DonHangDB donHangDB = new DonHangDB(connDB);
                CTDonHangDB cTDonHangDB = new CTDonHangDB(connDB);
                boolean complete = false;

                int maBan = Integer.parseInt(cb_ban.getSelectedItem().toString());
                Date currentDate = new Date();
                int trangThai = 0; // chua thanh toan
                float tongGiaTri  = 0;
                // tinh tong gia tri gio hang
                for (GioHangModel cartModel : cartModels) {
                    tongGiaTri += cartModel.getSoLuong() * cartModel.getProductModel().getGiaSP();
                }
                int maNV = 1;
                String moTaDH = "";
                int maDH = DB.getLastIndex("MADH", "admin.DONHANG", connDB) + 1;
                DonHangModel donHangModel = new DonHangModel(maDH, currentDate, trangThai, tongGiaTri, maNV, moTaDH, maBan);

                //            Them don hang vao db
                complete = donHangDB.addDonHang(donHangModel);

                // Cap nhat trang thai ban
                BanDB banDB = new BanDB(connDB);
                BanModel ban = banDB.getBan(donHangModel.getMaBan());
                ban.setTrangThaiBan(1);
                ban.setSoLuongKhach(soKhach);

                banDB.updateBan(ban);

                //            Tao chi tiet don hang
                for (GioHangModel cartModel : cartModels) {
                    int maCTDH = DB.getLastIndex("MACTDH", "admin.CHITIETDONHANG", connDB) + 1;
                    int maSP = cartModel.getProductModel().getMaSP();
                    int soLuong = cartModel.getSoLuong();
                    CTDonHangModel cTDonHangModel = new CTDonHangModel(maCTDH, maSP, maDH, soLuong);
                    //                them chitietdonhang vao db
                    complete = cTDonHangDB.addCTDonHang(cTDonHangModel);
                }

                // Xoa du lieu
                cartModels.clear();
                loadGioHang();
                updateTotalBill(cartModels);

                if (complete) {
                    JOptionPane.showMessageDialog(null, "Thêm thành công");
                    this.dispose();
                }
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(CreateOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_add_donhangActionPerformed

    private void table_productMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_productMouseReleased
        // TODO add your handling code here:
        String tenSP = table_product.getValueAt(table_product.getSelectedRow(), 2).toString();
        txt_product_name.setText(tenSP);
        btn_add_to_cart.setEnabled(true);
    }//GEN-LAST:event_table_productMouseReleased

    private void txt_quantity_order_productInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt_quantity_order_productInputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt_quantity_order_productInputMethodTextChanged

    private void txt_gh_sl_spInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txt_gh_sl_spInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_gh_sl_spInputMethodTextChanged

    private void table_gio_hangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_gio_hangMouseClicked
        // TODO add your handling code here:
        btn_gh_capnhat_sp.setEnabled(true);
        btn_gh_xoa_sp.setEnabled(true);
        
        String tenSP = table_gio_hang.getValueAt(table_gio_hang.getSelectedRow(), 1).toString().trim();
        int soLuong = Integer.parseInt(table_gio_hang.getValueAt(table_gio_hang.getSelectedRow(), 2).toString().trim());
        txt_gh_ten_sp.setText(tenSP);
        txt_gh_sl_sp.setValue(soLuong);
        // tim san pham trong gio hang
        
    }//GEN-LAST:event_table_gio_hangMouseClicked

    private void btn_gh_capnhat_spActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gh_capnhat_spActionPerformed
        // TODO add your handling code here:
        if (table_gio_hang.getSelectedRow() != -1 && DB.confirmAction("Bạn muốn cập nhật giỏ hàng ?")) {
            int maSP = Integer.parseInt(table_gio_hang.getValueAt(table_gio_hang.getSelectedRow(), 0).toString().trim());
            for (GioHangModel gioHang : cartModels) {
                if (gioHang.getProductModel().getMaSP() == maSP) {
                    // Cap nhat so luogn san pham
                    gioHang.setSoLuong(Integer.parseInt(txt_gh_sl_sp.getValue().toString().trim()));
                    loadGioHang();
                    updateTotalBill(cartModels);
                    JOptionPane.showMessageDialog(null, "Đã cập nhật giỏ hàng !");
                    return;
                }
            }
        }
        
        
    }//GEN-LAST:event_btn_gh_capnhat_spActionPerformed

    private void btn_gh_xoa_spActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gh_xoa_spActionPerformed
        // TODO add your handling code here:
        if (table_gio_hang.getSelectedRow() != -1 && DB.confirmAction("Bạn muốn xóa sản phẩm khỏi giỏ hàng ?")) {
            int maSP = Integer.parseInt(table_gio_hang.getValueAt(table_gio_hang.getSelectedRow(), 0).toString().trim());
            for (GioHangModel gioHang : cartModels) {
                if (gioHang.getProductModel().getMaSP() == maSP) {
                    // Xoa san pham
                    cartModels.remove(gioHang);
                    loadGioHang();
                    updateTotalBill(cartModels);
                    JOptionPane.showMessageDialog(null, "Đã xóa sản phẩm !");
                    return;
                }
            }
        }
    }//GEN-LAST:event_btn_gh_xoa_spActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateOrderForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add_donhang;
    private javax.swing.JButton btn_add_to_cart;
    private javax.swing.JButton btn_gh_capnhat_sp;
    private javax.swing.JButton btn_gh_xoa_sp;
    private javax.swing.JComboBox<String> cb_ban;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel layout_product;
    private javax.swing.JTable table_gio_hang;
    private javax.swing.JTable table_product;
    private javax.swing.JSpinner txt_gh_sl_sp;
    private javax.swing.JLabel txt_gh_ten_sp;
    private javax.swing.JLabel txt_product_name;
    private javax.swing.JSpinner txt_quantity_order_product;
    private javax.swing.JTextField txt_so_khach;
    private javax.swing.JLabel txt_total;
    // End of variables declaration//GEN-END:variables
}
