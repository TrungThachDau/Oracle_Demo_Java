/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oracle;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author QTrun
 */
public class PermissionGroup extends javax.swing.JFrame {

    /**
     * Creates new form PermissionGroup
     */
    OracleConnection oracle;
    public PermissionGroup() {
        initComponents();
        oracle = new OracleConnection();
        loadComboBox(cbbTableName,"SELECT table_name \n" +"FROM all_tables \n" +"WHERE owner = 'ADMIN'","table_name");
        loadComboBox(cbbUsername,"SELECT username \n" +"FROM all_users","username");
        loadComboBox(cbbRole,"SELECT role FROM dba_roles","role");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbbTableName = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cbbUsername = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRoleGrantUser = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        ckbSelectUser = new javax.swing.JCheckBox();
        ckbInsertUser = new javax.swing.JCheckBox();
        ckbUpdate = new javax.swing.JCheckBox();
        ckbDeleteUser = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        cbbRole = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        ckbSelectRole = new javax.swing.JCheckBox();
        ckbInsertRole = new javax.swing.JCheckBox();
        ckbUpdateRole = new javax.swing.JCheckBox();
        ckbDeleteRole = new javax.swing.JCheckBox();
        txtRoleName = new javax.swing.JTextField();
        btnAddRole = new javax.swing.JButton();
        btnDeleteRole = new javax.swing.JButton();
        btnGrantUser = new javax.swing.JButton();
        btnRevokeRole = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý nhóm quyền");
        setResizable(false);

        cbbTableName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTableNameActionPerformed(evt);
            }
        });

        jLabel1.setText("Bảng");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Người dùng"));

        cbbUsername.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cbbUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbUsernameActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên người dùng");

        tableRoleGrantUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Đã gán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableRoleGrantUser);
        if (tableRoleGrantUser.getColumnModel().getColumnCount() > 0) {
            tableRoleGrantUser.getColumnModel().getColumn(0).setResizable(false);
        }

        ckbSelectUser.setText("Chọn");
        ckbSelectUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbSelectUserActionPerformed(evt);
            }
        });

        ckbInsertUser.setText("Chèn");
        ckbInsertUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbInsertUserActionPerformed(evt);
            }
        });

        ckbUpdate.setText("Sửa");
        ckbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbUpdateActionPerformed(evt);
            }
        });

        ckbDeleteUser.setText("Xóa");
        ckbDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbDeleteUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckbSelectUser, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbInsertUser, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ckbSelectUser)
                .addGap(18, 18, 18)
                .addComponent(ckbInsertUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbUpdate)
                .addGap(18, 18, 18)
                .addComponent(ckbDeleteUser)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Vai trò"));

        jLabel3.setText("Vai trò");

        ckbSelectRole.setText("Chọn");
        ckbSelectRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbSelectRoleActionPerformed(evt);
            }
        });

        ckbInsertRole.setText("Chèn");
        ckbInsertRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbInsertRoleActionPerformed(evt);
            }
        });

        ckbUpdateRole.setText("Sửa");
        ckbUpdateRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbUpdateRoleActionPerformed(evt);
            }
        });

        ckbDeleteRole.setText("Xóa");
        ckbDeleteRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbDeleteRoleActionPerformed(evt);
            }
        });

        btnAddRole.setText("Thêm");
        btnAddRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckbInsertRole, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbSelectRole, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbUpdateRole, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbDeleteRole, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddRole))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ckbSelectRole)
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckbInsertRole)
                    .addComponent(txtRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ckbUpdateRole))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnAddRole)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbDeleteRole)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        btnDeleteRole.setText("Xóa");
        btnDeleteRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbRole, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteRole)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnDeleteRole))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );

        btnGrantUser.setText("<<");
        btnGrantUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrantUserActionPerformed(evt);
            }
        });

        btnRevokeRole.setText(">>");
        btnRevokeRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevokeRoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGrantUser)
                            .addComponent(btnRevokeRole))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbTableName, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbTableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(btnRevokeRole)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGrantUser)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbTableNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTableNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbTableNameActionPerformed

    private void btnAddRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoleActionPerformed
        // TODO add your handling code here:
        String rolename = txtRoleName.getText();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
             String sql = "CREATE ROLE "+rolename+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            cbbRole.removeAllItems();
            loadComboBox(cbbRole,"SELECT role FROM dba_roles","role");
            JOptionPane.showMessageDialog(null,"Đã thêm vai trò");
            txtRoleName.setText("");
            oracle.closeConnection();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
           
        }
    }//GEN-LAST:event_btnAddRoleActionPerformed

    private void btnDeleteRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRoleActionPerformed
        // TODO add your handling code here:
        String rolename = cbbRole.getSelectedItem().toString();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "DROP ROLE "+rolename+"";
            ResultSet rset = stmt.executeQuery(sql);    
            cbbRole.removeAllItems();
            loadComboBox(cbbRole,"SELECT role FROM dba_roles","role");
            JOptionPane.showMessageDialog(null,"Đã xóa vai trò");
            txtRoleName.setText("");
            oracle.closeConnection();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
           
        }
    }//GEN-LAST:event_btnDeleteRoleActionPerformed

    private void cbbUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbUsernameActionPerformed
        // TODO add your handling code here:
        String username=cbbUsername.getSelectedItem().toString();
        //JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + username, "Lỗi", JOptionPane.ERROR_MESSAGE);
        RemoveTableItem(tableRoleGrantUser);
        LoadRoleGranted(username);
        
    }//GEN-LAST:event_cbbUsernameActionPerformed

    private void ckbSelectUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbSelectUserActionPerformed
        // TODO add your handling code here:
        String table = cbbTableName.getSelectedItem().toString();
        String username = cbbUsername.getSelectedItem().toString();
        
            
        if(ckbSelectUser.isSelected())
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT SELECT ON ADMIN."+table+" TO "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã gán quyền 'CHỌN' trên bảng "+table+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
           
        }
        else
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE SELECT ON ADMIN."+table+" FROM "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã bỏ gán quyền 'CHỌN' trên bảng "+table+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
        }
    }//GEN-LAST:event_ckbSelectUserActionPerformed

    private void ckbInsertUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbInsertUserActionPerformed
        // TODO add your handling code here:
        String table = cbbTableName.getSelectedItem().toString();
        String username = cbbUsername.getSelectedItem().toString();
        
            
        if(ckbInsertUser.isSelected())
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT INSERT ON ADMIN."+table+" TO "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã gán quyền 'CHÈN' trên bảng "+table+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
           
        }
        else
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE INSERT ON ADMIN."+table+" FROM "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã bỏ gán quyền 'CHỌN' trên bảng "+table+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
        }
    }//GEN-LAST:event_ckbInsertUserActionPerformed

    private void ckbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbUpdateActionPerformed
        // TODO add your handling code here:
        String table = cbbTableName.getSelectedItem().toString();
        String username = cbbUsername.getSelectedItem().toString();
        
            
        if(ckbUpdate.isSelected())
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT UPDATE ON ADMIN."+table+" TO "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã gán quyền 'SỬA' trên bảng "+table+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
           
        }
        else
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE UPDATE ON ADMIN."+table+" FROM "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã bỏ gán quyền 'SỬA' trên bảng "+table+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
        }
    }//GEN-LAST:event_ckbUpdateActionPerformed

    private void ckbDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbDeleteUserActionPerformed
        // TODO add your handling code here:
        String table = cbbTableName.getSelectedItem().toString();
        String username = cbbUsername.getSelectedItem().toString();
        
            
        if(ckbDeleteUser.isSelected())
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT DELETE ON ADMIN."+table+" TO "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã gán quyền 'XÓA' trên bảng "+table+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
           
        }
        else
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE DELETE ON ADMIN."+table+" FROM "+username+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã bỏ gán quyền 'XÓA' trên bảng "+table+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
        }
    }//GEN-LAST:event_ckbDeleteUserActionPerformed

    private void ckbSelectRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbSelectRoleActionPerformed
        // TODO add your handling code here:
        String table = cbbTableName.getSelectedItem().toString();
        String role = cbbRole.getSelectedItem().toString();
        
            
        if(ckbSelectRole.isSelected())
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT SELECT ON ADMIN."+table+" TO "+role+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã gán quyền 'CHỌN' trên bảng "+table+" cho vai trò "+role,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
           
        }
        else
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE SELECT ON ADMIN."+table+" FROM "+role+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã bỏ gán quyền 'CHỌN' trên bảng "+table+" cho vai trò "+role,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
        }
    }//GEN-LAST:event_ckbSelectRoleActionPerformed

    private void ckbInsertRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbInsertRoleActionPerformed
        // TODO add your handling code here:
        String table = cbbTableName.getSelectedItem().toString();
        String role = cbbRole.getSelectedItem().toString();
        
            
        if(ckbInsertRole.isSelected())
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT INSERT ON ADMIN."+table+" TO "+role+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã gán quyền 'CHÈN' trên bảng "+table+" cho vai trò "+role,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
           
        }
        else
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE INSERT ON ADMIN."+table+" FROM "+role+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã bỏ gán quyền 'CHÈM' trên bảng "+table+" cho vai trò "+role,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
        }
    }//GEN-LAST:event_ckbInsertRoleActionPerformed

    private void ckbUpdateRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbUpdateRoleActionPerformed
        // TODO add your handling code here:
        String table = cbbTableName.getSelectedItem().toString();
        String role = cbbRole.getSelectedItem().toString();
        
            
        if(ckbUpdateRole.isSelected())
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT UPDATE ON ADMIN."+table+" TO "+role+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã gán quyền 'SỬA' trên bảng "+table+" cho vai trò "+role,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
           
        }
        else
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE UPDATE ON ADMIN."+table+" FROM "+role+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã bỏ gán quyền 'SỬA' trên bảng "+table+" cho vai trò "+role,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
        }
    }//GEN-LAST:event_ckbUpdateRoleActionPerformed

    private void ckbDeleteRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbDeleteRoleActionPerformed
        // TODO add your handling code here:
        String table = cbbTableName.getSelectedItem().toString();
        String role = cbbRole.getSelectedItem().toString();
        
            
        if(ckbDeleteRole.isSelected())
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT DELETE ON ADMIN."+table+" TO "+role+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã gán quyền 'XÓA' trên bảng "+table+" cho vai trò "+role,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
           
        }
        else
        {
            try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE DELETE ON ADMIN."+table+" FROM "+role+"";
            ResultSet rset = stmt.executeQuery(sql);
            //RemoveTableItem(jTable1);
            //cbbRole.removeAllItems();            
            JOptionPane.showMessageDialog(null,"Đã bỏ gán quyền 'XÓA' trên bảng "+table+" cho vai trò "+role,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
        }
    }//GEN-LAST:event_ckbDeleteRoleActionPerformed

    private void btnGrantUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrantUserActionPerformed
        // TODO add your handling code here:
        String role = cbbRole.getSelectedItem().toString();
        String username =cbbUsername.getSelectedItem().toString();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "GRANT "+role+" TO "+username+"";
            ResultSet rset = stmt.executeQuery(sql);                   
            JOptionPane.showMessageDialog(null,"Đã gán quyền "+role+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            RemoveTableItem(tableRoleGrantUser);
            LoadRoleGranted(username);
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
    }//GEN-LAST:event_btnGrantUserActionPerformed

    private void btnRevokeRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevokeRoleActionPerformed
        // TODO add your handling code here:
        String role = cbbRole.getSelectedItem().toString();
        String username =cbbUsername.getSelectedItem().toString();
        try {
            oracle.openConnection();
            Statement stmt;
            stmt = oracle.conn.createStatement();
            String sql = "REVOKE "+role+" FROM "+username+"";
            ResultSet rset = stmt.executeQuery(sql);                   
            JOptionPane.showMessageDialog(null,"Đã hủy gán quyền "+role+" cho người dùng "+username,"Xong",JOptionPane.PLAIN_MESSAGE);         
            oracle.closeConnection();
            RemoveTableItem(tableRoleGrantUser);
            LoadRoleGranted(username);
            } catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);

                }
    }//GEN-LAST:event_btnRevokeRoleActionPerformed
    public void loadComboBox(JComboBox<String> jComboBox, String sql,String rowname)
        {
            try {
                oracle.openConnection();
                // Kết nối đến CSDL Oracle

                Statement stmt = oracle.conn.createStatement();

                // Truy vấn dữ liệu
                ResultSet rs = stmt.executeQuery(sql);

                // Đưa dữ liệu vào mảng
                while (rs.next()) {
                    String name = rs.getString(rowname);
                    jComboBox.addItem(name);
                }

                oracle.closeConnection();
            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    public void LoadRoleGranted(String username)
    {
        try
        {
            oracle.openConnection();
            String sql = "SELECT GRANTED_ROLE\n" +"FROM dba_role_privs \n" +"WHERE grantee = '"+username+"'";
            Statement stmt = oracle.conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while(rs.next())
            {
                String one = rs.getString("GRANTED_ROLE");                          
                String tbData[] = {one};
                DefaultTableModel tblModel = (DefaultTableModel)tableRoleGrantUser.getModel();               
                tblModel.addRow(tbData);  
            }
            tableRoleGrantUser.updateUI();
            oracle.closeConnection();
        } catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Lỗi truy vấn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void RemoveTableItem(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            table.removeAll();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PermissionGroup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PermissionGroup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PermissionGroup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PermissionGroup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PermissionGroup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRole;
    private javax.swing.JButton btnDeleteRole;
    private javax.swing.JButton btnGrantUser;
    private javax.swing.JButton btnRevokeRole;
    private javax.swing.JComboBox<String> cbbRole;
    private javax.swing.JComboBox<String> cbbTableName;
    private javax.swing.JComboBox<String> cbbUsername;
    private javax.swing.JCheckBox ckbDeleteRole;
    private javax.swing.JCheckBox ckbDeleteUser;
    private javax.swing.JCheckBox ckbInsertRole;
    private javax.swing.JCheckBox ckbInsertUser;
    private javax.swing.JCheckBox ckbSelectRole;
    private javax.swing.JCheckBox ckbSelectUser;
    private javax.swing.JCheckBox ckbUpdate;
    private javax.swing.JCheckBox ckbUpdateRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRoleGrantUser;
    private javax.swing.JTextField txtRoleName;
    // End of variables declaration//GEN-END:variables
}
